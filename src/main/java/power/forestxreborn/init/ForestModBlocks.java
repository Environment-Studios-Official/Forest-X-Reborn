
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package power.forestxreborn.init;

import power.forestxreborn.block.WildflowerBlock;
import power.forestxreborn.block.WarpedParquetBlock;
import power.forestxreborn.block.TruncatedPumiceWallBlock;
import power.forestxreborn.block.TruncatedPumiceStairsBlock;
import power.forestxreborn.block.TruncatedPumiceSlabBlock;
import power.forestxreborn.block.TruncatedPumiceBlock;
import power.forestxreborn.block.TruncatedCarvedPumiceBlock;
import power.forestxreborn.block.TropicalParquetBlock;
import power.forestxreborn.block.SunshroomBlock;
import power.forestxreborn.block.StrippedSakuraLogBlock;
import power.forestxreborn.block.SpruceParquetBlock;
import power.forestxreborn.block.SnailShellBlock;
import power.forestxreborn.block.SilverOreBlock;
import power.forestxreborn.block.SilverBlockBlock;
import power.forestxreborn.block.SapphireOreBlock;
import power.forestxreborn.block.SapphireBlockBlock;
import power.forestxreborn.block.SandslateFacetedBricksBlock;
import power.forestxreborn.block.SandslateBricksWallBlock;
import power.forestxreborn.block.SandslateBricksStairsBlock;
import power.forestxreborn.block.SandslateBricksSlabBlock;
import power.forestxreborn.block.SandslateBricksBlock;
import power.forestxreborn.block.SandslateBlock;
import power.forestxreborn.block.SakuraWoodBlock;
import power.forestxreborn.block.SakuraTrapdoorBlock;
import power.forestxreborn.block.SakuraStairsBlock;
import power.forestxreborn.block.SakuraSlabBlock;
import power.forestxreborn.block.SakuraSaplingBlock;
import power.forestxreborn.block.SakuraPressurePlateBlock;
import power.forestxreborn.block.SakuraPlanksBlock;
import power.forestxreborn.block.SakuraParquetBlock;
import power.forestxreborn.block.SakuraLogBlock;
import power.forestxreborn.block.SakuraLeavesBlock;
import power.forestxreborn.block.SakuraFenceGateBlock;
import power.forestxreborn.block.SakuraFenceBlock;
import power.forestxreborn.block.SakuraDoorBlock;
import power.forestxreborn.block.SakuraButtonBlock;
import power.forestxreborn.block.RhyoliteWallBlock;
import power.forestxreborn.block.RhyoliteStairsBlock;
import power.forestxreborn.block.RhyoliteSlabBlock;
import power.forestxreborn.block.RhyoliteBricksWallBlock;
import power.forestxreborn.block.RhyoliteBricksStairsBlock;
import power.forestxreborn.block.RhyoliteBricksSlabBlock;
import power.forestxreborn.block.RhyoliteBricksBlock;
import power.forestxreborn.block.RhyoliteBlock;
import power.forestxreborn.block.RedCrushedSandstoneWallBlock;
import power.forestxreborn.block.RedCrushedSandstoneStairsBlock;
import power.forestxreborn.block.RedCrushedSandstoneSlabBlock;
import power.forestxreborn.block.RedCrushedSandstoneBlock;
import power.forestxreborn.block.RawSilverBlockBlock;
import power.forestxreborn.block.RawGingerbreadBlockBlock;
import power.forestxreborn.block.PumiceWallBlock;
import power.forestxreborn.block.PumiceStairsBlock;
import power.forestxreborn.block.PumiceSlabBlock;
import power.forestxreborn.block.PumiceBricksWallBlock;
import power.forestxreborn.block.PumiceBricksStairsBlock;
import power.forestxreborn.block.PumiceBricksSlabBlock;
import power.forestxreborn.block.PumiceBricksBlock;
import power.forestxreborn.block.PumiceBlock;
import power.forestxreborn.block.PolishedSandslateWallBlock;
import power.forestxreborn.block.PolishedSandslateStairsBlock;
import power.forestxreborn.block.PolishedSandslateSlabBlock;
import power.forestxreborn.block.PolishedSandslateBlock;
import power.forestxreborn.block.PolishedRhyoliteWallBlock;
import power.forestxreborn.block.PolishedRhyoliteStairsBlock;
import power.forestxreborn.block.PolishedRhyoliteSlabBlock;
import power.forestxreborn.block.PolishedRhyoliteBlock;
import power.forestxreborn.block.PolishedPumiceWallBlock;
import power.forestxreborn.block.PolishedPumiceStairsBlock;
import power.forestxreborn.block.PolishedPumiceSlabBlock;
import power.forestxreborn.block.PolishedPumiceBlock;
import power.forestxreborn.block.PolishedMarbleWallBlock;
import power.forestxreborn.block.PolishedMarbleStairsBlock;
import power.forestxreborn.block.PolishedMarbleSlabBlock;
import power.forestxreborn.block.PolishedMarbleBlock;
import power.forestxreborn.block.PeatBlock;
import power.forestxreborn.block.OakParquetBlock;
import power.forestxreborn.block.MoonshroomBlock;
import power.forestxreborn.block.MarbleBricksWallBlock;
import power.forestxreborn.block.MarbleBricksStairsBlock;
import power.forestxreborn.block.MarbleBricksSlabBlock;
import power.forestxreborn.block.MarbleBricksBlock;
import power.forestxreborn.block.MarbleBlock;
import power.forestxreborn.block.MangroveParquetBlock;
import power.forestxreborn.block.LettuceStage3Block;
import power.forestxreborn.block.LettuceStage2Block;
import power.forestxreborn.block.LettuceStage1Block;
import power.forestxreborn.block.LettuceStage0Block;
import power.forestxreborn.block.LavanderBlock;
import power.forestxreborn.block.GingerbreadBricksBlock;
import power.forestxreborn.block.GingerbreadBlockBlock;
import power.forestxreborn.block.DesertRoseBlock;
import power.forestxreborn.block.DenseWebWithSpiderBlock;
import power.forestxreborn.block.DenseWebBlock;
import power.forestxreborn.block.DeepslateSilverOreBlock;
import power.forestxreborn.block.DeepslateSapphireOreBlock;
import power.forestxreborn.block.DarkOakParquetBlock;
import power.forestxreborn.block.CrushedSandstoneWallBlock;
import power.forestxreborn.block.CrushedSandstoneStairsBlock;
import power.forestxreborn.block.CrushedSandstoneSlabBlock;
import power.forestxreborn.block.CrushedSandstoneBlock;
import power.forestxreborn.block.CrimsonParquetBlock;
import power.forestxreborn.block.CobbledSandslateWallBlock;
import power.forestxreborn.block.CobbledSandslateStairsBlock;
import power.forestxreborn.block.CobbledSandslateSlabBlock;
import power.forestxreborn.block.CobbledSandslateBlock;
import power.forestxreborn.block.ChiseledRhyoliteBlock;
import power.forestxreborn.block.BurningblossomBlock;
import power.forestxreborn.block.BlueberryBush1Block;
import power.forestxreborn.block.BlueberryBush0Block;
import power.forestxreborn.block.BlueRoseBlock;
import power.forestxreborn.block.BirchParquetBlock;
import power.forestxreborn.block.AcaciaParquetBlock;
import power.forestxreborn.ForestMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

public class ForestModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, ForestMod.MODID);
	public static final RegistryObject<Block> SNAIL_SHELL = REGISTRY.register("snail_shell", () -> new SnailShellBlock());
	public static final RegistryObject<Block> PEAT = REGISTRY.register("peat", () -> new PeatBlock());
	public static final RegistryObject<Block> CRUSHED_SANDSTONE = REGISTRY.register("crushed_sandstone", () -> new CrushedSandstoneBlock());
	public static final RegistryObject<Block> CRUSHED_SANDSTONE_STAIRS = REGISTRY.register("crushed_sandstone_stairs", () -> new CrushedSandstoneStairsBlock());
	public static final RegistryObject<Block> CRUSHED_SANDSTONE_SLAB = REGISTRY.register("crushed_sandstone_slab", () -> new CrushedSandstoneSlabBlock());
	public static final RegistryObject<Block> CRUSHED_SANDSTONE_WALL = REGISTRY.register("crushed_sandstone_wall", () -> new CrushedSandstoneWallBlock());
	public static final RegistryObject<Block> RED_CRUSHED_SANDSTONE = REGISTRY.register("red_crushed_sandstone", () -> new RedCrushedSandstoneBlock());
	public static final RegistryObject<Block> RED_CRUSHED_SANDSTONE_STAIRS = REGISTRY.register("red_crushed_sandstone_stairs", () -> new RedCrushedSandstoneStairsBlock());
	public static final RegistryObject<Block> RED_CRUSHED_SANDSTONE_SLAB = REGISTRY.register("red_crushed_sandstone_slab", () -> new RedCrushedSandstoneSlabBlock());
	public static final RegistryObject<Block> RED_CRUSHED_SANDSTONE_WALL = REGISTRY.register("red_crushed_sandstone_wall", () -> new RedCrushedSandstoneWallBlock());
	public static final RegistryObject<Block> OAK_PARQUET = REGISTRY.register("oak_parquet", () -> new OakParquetBlock());
	public static final RegistryObject<Block> BIRCH_PARQUET = REGISTRY.register("birch_parquet", () -> new BirchParquetBlock());
	public static final RegistryObject<Block> DARK_OAK_PARQUET = REGISTRY.register("dark_oak_parquet", () -> new DarkOakParquetBlock());
	public static final RegistryObject<Block> SPRUCE_PARQUET = REGISTRY.register("spruce_parquet", () -> new SpruceParquetBlock());
	public static final RegistryObject<Block> ACACIA_PARQUET = REGISTRY.register("acacia_parquet", () -> new AcaciaParquetBlock());
	public static final RegistryObject<Block> TROPICAL_PARQUET = REGISTRY.register("tropical_parquet", () -> new TropicalParquetBlock());
	public static final RegistryObject<Block> CRIMSON_PARQUET = REGISTRY.register("crimson_parquet", () -> new CrimsonParquetBlock());
	public static final RegistryObject<Block> WARPED_PARQUET = REGISTRY.register("warped_parquet", () -> new WarpedParquetBlock());
	public static final RegistryObject<Block> MANGROVE_PARQUET = REGISTRY.register("mangrove_parquet", () -> new MangroveParquetBlock());
	public static final RegistryObject<Block> SAKURA_PARQUET = REGISTRY.register("sakura_parquet", () -> new SakuraParquetBlock());
	public static final RegistryObject<Block> MARBLE = REGISTRY.register("marble", () -> new MarbleBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS = REGISTRY.register("marble_bricks", () -> new MarbleBricksBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE = REGISTRY.register("polished_marble", () -> new PolishedMarbleBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_SLAB = REGISTRY.register("polished_marble_slab", () -> new PolishedMarbleSlabBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS_SLAB = REGISTRY.register("marble_bricks_slab", () -> new MarbleBricksSlabBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_STAIRS = REGISTRY.register("polished_marble_stairs", () -> new PolishedMarbleStairsBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS_STAIRS = REGISTRY.register("marble_bricks_stairs", () -> new MarbleBricksStairsBlock());
	public static final RegistryObject<Block> POLISHED_MARBLE_WALL = REGISTRY.register("polished_marble_wall", () -> new PolishedMarbleWallBlock());
	public static final RegistryObject<Block> MARBLE_BRICKS_WALL = REGISTRY.register("marble_bricks_wall", () -> new MarbleBricksWallBlock());
	public static final RegistryObject<Block> RHYOLITE = REGISTRY.register("rhyolite", () -> new RhyoliteBlock());
	public static final RegistryObject<Block> POLISHED_RHYOLITE = REGISTRY.register("polished_rhyolite", () -> new PolishedRhyoliteBlock());
	public static final RegistryObject<Block> RHYOLITE_BRICKS = REGISTRY.register("rhyolite_bricks", () -> new RhyoliteBricksBlock());
	public static final RegistryObject<Block> CHISELED_RHYOLITE = REGISTRY.register("chiseled_rhyolite", () -> new ChiseledRhyoliteBlock());
	public static final RegistryObject<Block> RHYOLITE_SLAB = REGISTRY.register("rhyolite_slab", () -> new RhyoliteSlabBlock());
	public static final RegistryObject<Block> POLISHED_RHYOLITE_SLAB = REGISTRY.register("polished_rhyolite_slab", () -> new PolishedRhyoliteSlabBlock());
	public static final RegistryObject<Block> RHYOLITE_BRICKS_SLAB = REGISTRY.register("rhyolite_bricks_slab", () -> new RhyoliteBricksSlabBlock());
	public static final RegistryObject<Block> RHYOLITE_STAIRS = REGISTRY.register("rhyolite_stairs", () -> new RhyoliteStairsBlock());
	public static final RegistryObject<Block> POLISHED_RHYOLITE_STAIRS = REGISTRY.register("polished_rhyolite_stairs", () -> new PolishedRhyoliteStairsBlock());
	public static final RegistryObject<Block> RHYOLITE_BRICKS_STAIRS = REGISTRY.register("rhyolite_bricks_stairs", () -> new RhyoliteBricksStairsBlock());
	public static final RegistryObject<Block> RHYOLITE_WALL = REGISTRY.register("rhyolite_wall", () -> new RhyoliteWallBlock());
	public static final RegistryObject<Block> POLISHED_RHYOLITE_WALL = REGISTRY.register("polished_rhyolite_wall", () -> new PolishedRhyoliteWallBlock());
	public static final RegistryObject<Block> RHYOLITE_BRICKS_WALL = REGISTRY.register("rhyolite_bricks_wall", () -> new RhyoliteBricksWallBlock());
	public static final RegistryObject<Block> PUMICE = REGISTRY.register("pumice", () -> new PumiceBlock());
	public static final RegistryObject<Block> POLISHED_PUMICE = REGISTRY.register("polished_pumice", () -> new PolishedPumiceBlock());
	public static final RegistryObject<Block> PUMICE_BRICKS = REGISTRY.register("pumice_bricks", () -> new PumiceBricksBlock());
	public static final RegistryObject<Block> TRUNCATED_PUMICE = REGISTRY.register("truncated_pumice", () -> new TruncatedPumiceBlock());
	public static final RegistryObject<Block> TRUNCATED_CARVED_PUMICE = REGISTRY.register("truncated_carved_pumice", () -> new TruncatedCarvedPumiceBlock());
	public static final RegistryObject<Block> PUMICE_SLAB = REGISTRY.register("pumice_slab", () -> new PumiceSlabBlock());
	public static final RegistryObject<Block> POLISHED_PUMICE_SLAB = REGISTRY.register("polished_pumice_slab", () -> new PolishedPumiceSlabBlock());
	public static final RegistryObject<Block> PUMICE_BRICKS_SLAB = REGISTRY.register("pumice_bricks_slab", () -> new PumiceBricksSlabBlock());
	public static final RegistryObject<Block> TRUNCATED_PUMICE_SLAB = REGISTRY.register("truncated_pumice_slab", () -> new TruncatedPumiceSlabBlock());
	public static final RegistryObject<Block> PUMICE_STAIRS = REGISTRY.register("pumice_stairs", () -> new PumiceStairsBlock());
	public static final RegistryObject<Block> POLISHED_PUMICE_STAIRS = REGISTRY.register("polished_pumice_stairs", () -> new PolishedPumiceStairsBlock());
	public static final RegistryObject<Block> PUMICE_BRICKS_STAIRS = REGISTRY.register("pumice_bricks_stairs", () -> new PumiceBricksStairsBlock());
	public static final RegistryObject<Block> TRUNCATED_PUMICE_STAIRS = REGISTRY.register("truncated_pumice_stairs", () -> new TruncatedPumiceStairsBlock());
	public static final RegistryObject<Block> PUMICE_WALL = REGISTRY.register("pumice_wall", () -> new PumiceWallBlock());
	public static final RegistryObject<Block> POLISHED_PUMICE_WALL = REGISTRY.register("polished_pumice_wall", () -> new PolishedPumiceWallBlock());
	public static final RegistryObject<Block> PUMICE_BRICKS_WALL = REGISTRY.register("pumice_bricks_wall", () -> new PumiceBricksWallBlock());
	public static final RegistryObject<Block> TRUNCATED_PUMICE_WALL = REGISTRY.register("truncated_pumice_wall", () -> new TruncatedPumiceWallBlock());
	public static final RegistryObject<Block> SANDSLATE = REGISTRY.register("sandslate", () -> new SandslateBlock());
	public static final RegistryObject<Block> COBBLED_SANDSLATE = REGISTRY.register("cobbled_sandslate", () -> new CobbledSandslateBlock());
	public static final RegistryObject<Block> POLISHED_SANDSLATE = REGISTRY.register("polished_sandslate", () -> new PolishedSandslateBlock());
	public static final RegistryObject<Block> SANDSLATE_BRICKS = REGISTRY.register("sandslate_bricks", () -> new SandslateBricksBlock());
	public static final RegistryObject<Block> SANDSLATE_FACETED_BRICKS = REGISTRY.register("sandslate_faceted_bricks", () -> new SandslateFacetedBricksBlock());
	public static final RegistryObject<Block> COBBLED_SANDSLATE_SLAB = REGISTRY.register("cobbled_sandslate_slab", () -> new CobbledSandslateSlabBlock());
	public static final RegistryObject<Block> POLISHED_SANDSLATE_SLAB = REGISTRY.register("polished_sandslate_slab", () -> new PolishedSandslateSlabBlock());
	public static final RegistryObject<Block> SANDSLATE_BRICKS_SLAB = REGISTRY.register("sandslate_bricks_slab", () -> new SandslateBricksSlabBlock());
	public static final RegistryObject<Block> COBBLED_SANDSLATE_STAIRS = REGISTRY.register("cobbled_sandslate_stairs", () -> new CobbledSandslateStairsBlock());
	public static final RegistryObject<Block> POLISHED_SANDSLATE_STAIRS = REGISTRY.register("polished_sandslate_stairs", () -> new PolishedSandslateStairsBlock());
	public static final RegistryObject<Block> SANDSLATE_BRICKS_STAIRS = REGISTRY.register("sandslate_bricks_stairs", () -> new SandslateBricksStairsBlock());
	public static final RegistryObject<Block> COBBLED_SANDSLATE_WALL = REGISTRY.register("cobbled_sandslate_wall", () -> new CobbledSandslateWallBlock());
	public static final RegistryObject<Block> POLISHED_SANDSLATE_WALL = REGISTRY.register("polished_sandslate_wall", () -> new PolishedSandslateWallBlock());
	public static final RegistryObject<Block> SANDSLATE_BRICKS_WALL = REGISTRY.register("sandslate_bricks_wall", () -> new SandslateBricksWallBlock());
	public static final RegistryObject<Block> RAW_GINGERBREAD_BLOCK = REGISTRY.register("raw_gingerbread_block", () -> new RawGingerbreadBlockBlock());
	public static final RegistryObject<Block> GINGERBREAD_BLOCK = REGISTRY.register("gingerbread_block", () -> new GingerbreadBlockBlock());
	public static final RegistryObject<Block> GINGERBREAD_BRICKS = REGISTRY.register("gingerbread_bricks", () -> new GingerbreadBricksBlock());
	public static final RegistryObject<Block> SAKURA_SAPLING = REGISTRY.register("sakura_sapling", () -> new SakuraSaplingBlock());
	public static final RegistryObject<Block> SAKURA_LEAVES = REGISTRY.register("sakura_leaves", () -> new SakuraLeavesBlock());
	public static final RegistryObject<Block> SAKURA_WOOD = REGISTRY.register("sakura_wood", () -> new SakuraWoodBlock());
	public static final RegistryObject<Block> SAKURA_LOG = REGISTRY.register("sakura_log", () -> new SakuraLogBlock());
	public static final RegistryObject<Block> STRIPPED_SAKURA_LOG = REGISTRY.register("stripped_sakura_log", () -> new StrippedSakuraLogBlock());
	public static final RegistryObject<Block> SAKURA_PLANKS = REGISTRY.register("sakura_planks", () -> new SakuraPlanksBlock());
	public static final RegistryObject<Block> SAKURA_STAIRS = REGISTRY.register("sakura_stairs", () -> new SakuraStairsBlock());
	public static final RegistryObject<Block> SAKURA_SLAB = REGISTRY.register("sakura_slab", () -> new SakuraSlabBlock());
	public static final RegistryObject<Block> SAKURA_DOOR = REGISTRY.register("sakura_door", () -> new SakuraDoorBlock());
	public static final RegistryObject<Block> SAKURA_TRAPDOOR = REGISTRY.register("sakura_trapdoor", () -> new SakuraTrapdoorBlock());
	public static final RegistryObject<Block> SAKURA_FENCE = REGISTRY.register("sakura_fence", () -> new SakuraFenceBlock());
	public static final RegistryObject<Block> SAKURA_FENCE_GATE = REGISTRY.register("sakura_fence_gate", () -> new SakuraFenceGateBlock());
	public static final RegistryObject<Block> SAKURA_PRESSURE_PLATE = REGISTRY.register("sakura_pressure_plate", () -> new SakuraPressurePlateBlock());
	public static final RegistryObject<Block> SAKURA_BUTTON = REGISTRY.register("sakura_button", () -> new SakuraButtonBlock());
	public static final RegistryObject<Block> WILDFLOWER = REGISTRY.register("wildflower", () -> new WildflowerBlock());
	public static final RegistryObject<Block> BURNING_BLOSSOM = REGISTRY.register("burning_blossom", () -> new BurningblossomBlock());
	public static final RegistryObject<Block> LAVANDER = REGISTRY.register("lavander", () -> new LavanderBlock());
	public static final RegistryObject<Block> DESERT_ROSE = REGISTRY.register("desert_rose", () -> new DesertRoseBlock());
	public static final RegistryObject<Block> BLUE_ROSE = REGISTRY.register("blue_rose", () -> new BlueRoseBlock());
	public static final RegistryObject<Block> CLAY_OVEN = REGISTRY.register("clay_oven", () -> new ClayOvenBlock());
	public static final RegistryObject<Block> SILVER_ORE = REGISTRY.register("silver_ore", () -> new SilverOreBlock());
	public static final RegistryObject<Block> DEEPSLATE_SILVER_ORE = REGISTRY.register("deepslate_silver_ore", () -> new DeepslateSilverOreBlock());
	public static final RegistryObject<Block> RAW_SILVER_BLOCK = REGISTRY.register("raw_silver_block", () -> new RawSilverBlockBlock());
	public static final RegistryObject<Block> SILVER_BLOCK = REGISTRY.register("silver_block", () -> new SilverBlockBlock());
	public static final RegistryObject<Block> SAPPHIRE_ORE = REGISTRY.register("sapphire_ore", () -> new SapphireOreBlock());
	public static final RegistryObject<Block> SAPPHIRE_BLOCK = REGISTRY.register("sapphire_block", () -> new SapphireBlockBlock());
	public static final RegistryObject<Block> DEEPSLATE_SAPPHIRE_ORE = REGISTRY.register("deepslate_sapphire_ore", () -> new DeepslateSapphireOreBlock());
	public static final RegistryObject<Block> DENSE_WEB = REGISTRY.register("dense_web", () -> new DenseWebBlock());
	public static final RegistryObject<Block> DENSE_WEB_WITH_SPIDER = REGISTRY.register("dense_web_with_spider", () -> new DenseWebWithSpiderBlock());
	public static final RegistryObject<Block> BLUEBERRY_BUSH_0 = REGISTRY.register("blueberry_bush_0", () -> new BlueberryBush0Block());
	public static final RegistryObject<Block> BLUEBERRY_BUSH_1 = REGISTRY.register("blueberry_bush_1", () -> new BlueberryBush1Block());
	public static final RegistryObject<Block> LETTUCE_STAGE_0 = REGISTRY.register("lettuce_stage_0", () -> new LettuceStage0Block());
	public static final RegistryObject<Block> LETTUCE_STAGE_1 = REGISTRY.register("lettuce_stage_1", () -> new LettuceStage1Block());
	public static final RegistryObject<Block> LETTUCE_STAGE_2 = REGISTRY.register("lettuce_stage_2", () -> new LettuceStage2Block());
	public static final RegistryObject<Block> LETTUCE_STAGE_3 = REGISTRY.register("lettuce_stage_3", () -> new LettuceStage3Block());
	public static final RegistryObject<Block> SUNSHROOM = REGISTRY.register("sunshroom", () -> new SunshroomBlock());
	public static final RegistryObject<Block> MOONSHROOM = REGISTRY.register("moonshroom", () -> new MoonshroomBlock());
}
